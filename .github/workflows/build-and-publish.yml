# This is a basic workflow to help you get started with Actions
name: Bundle building and pushing

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on: [workflow_dispatch]

env:
  GO_VERSION: '1.16.1'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Linter
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Download modules
        run: go mod download
      - name: Build project
        run: go build ./cmd/aks-periscope
      - name: Run the changelog reader
        id: changelog_reader
        uses: ./
      - name: Display output
        run: |
          echo "Version: ${{ steps.changelog_reader.outputs.version }}"
      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name : ${{ steps.changelog_reader.outputs.current-version}}
          release_name: ${{ steps.changelog_reader.outputs.current-version}}
          body: Publish ${{ steps.changelog_reader.outputs.current-version}}
      # Lowercase my github ownername.
      - name: Set Environment Variables
        run: |
          OWNER="$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')"
          echo "REPO-OWNER=${OWNER}" >> $GITHUB_ENV

      - name: Login to GitHub Packages OCI Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PASSWORD }} # requires you to have a GH token and place it in a secret "GHCR_PASSWORD"
      - name: Porter publish to ghcr.io 
      # Note the below automatically sets the registry to the local GH registry of the org name. 
      # Currently, for pure gitops reconstructing this runtime setting will require looking at the repository owner of the commit
        run: |
          docker build -f ./builder/Dockerfile -t aks/periscope .
          echo "start docker build done"
          echo "start docker tag"
          docker tag aks/periscope ghcr.io/${{ env.REPO-OWNER }}/aks/periscope:${{ steps.changelog_reader.outputs.version }}
          docker push $(registryLoginServerName)/public/aks/periscope:${{ steps.changelog_reader.outputs.version }}