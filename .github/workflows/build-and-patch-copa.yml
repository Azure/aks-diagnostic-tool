# This is a basic workflow to help you get started with Actions
name: Building and Patch

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on: [workflow_dispatch]

permissions:
  contents: read
  packages: write

jobs:
  common:
      runs-on: ubuntu-latest
      defaults:
        run:
          shell: pwsh
      steps:
      - uses: actions/checkout@v3
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          path: ./CHANGELOG.md
      - name: Get Version Info
        id: read_metadata
        run: |
          echo "Version: ${{ steps.changelog_reader.outputs.version }}"
          echo "Changes: ${{ steps.changelog_reader.outputs.changes }}"
          $version = "${{ steps.changelog_reader.outputs.version }}"
          $owner = "${{ github.repository_owner }}".ToLower()
          $image = "ghcr.io/$owner/aks/periscope"
          echo "image=$image" >> $env:GITHUB_OUTPUT
          echo "version=$version" >> $env:GITHUB_OUTPUT
      outputs:
        image: ${{ steps.read_metadata.outputs.image }}
        version: ${{ steps.read_metadata.outputs.version }}
  patch:
      runs-on: ubuntu-latest
      needs: common
      steps:
      - name: Harden Runner 
        uses: step-security/harden-runner@cba0d00b1fc9a034e1e642ea0f1103c282990604 # v2.5.0 
        with: 
          egress-policy: audit 
      - name: Login to ghcr.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Trivy Report
        uses: aquasecurity/trivy-action@41f05d9ecffa2ed3f1580af306000f734b733e54 # v0.11.2
        with:
          scan-type: 'image'
          format: 'json'
          output: 'report.json'
          ignore-unfixed: true
          vuln-type: 'os'
          image-ref:  ${{ needs.common.outputs.image }}:${{ needs.common.outputs.version }}
      - name: Check Vuln Count
        id: vuln_cout
        run: |
          report_file="report.json"
          vuln_count=$(jq '.Results[0].Vulnerabilities | length' "$report_file")
          echo "vuln_count=$vuln_count" >> $GITHUB_OUTPUT
      - name: Copa Action
        if: steps.vuln_cout.outputs.vuln_count != '0'
        id: copa
        uses: project-copacetic/copa-action@1eb86b0907bce48225b66dc9488c7d329c2d48a0 # v1.0.0
        with:
          image:  ${{ needs.common.outputs.image }}:${{ needs.common.outputs.version }}
          image-report: 'report.json'
          patched-tag: '${{ needs.common.outputs.version }}-patched'
          buildkit-version: 'v0.12.1'
      - name: Push patched image
        if: steps.copa.conclusion == 'success'
        run: |
          docker push ${{ needs.common.outputs.image }}:${{ needs.common.outputs.version }}-patched
