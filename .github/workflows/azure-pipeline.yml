# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ feature/enable-unit-testing ]
  pull_request:
    branches: [ feature/enable-unit-testing ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
       sourceDirectory: "."

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      - run: |
          sudo apt update
          sudo apt --fix-broken install -y
          sudo apt install python3-pip -y
          pip3 install setuptools
          pip3 install pylint coverage
        name: 'Install OS Packages'

      - run: |
          sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
          sudo apt update
          sudo apt install docker-ce -y
          sudo systemctl status docker
          sudo usermod -a -G docker ${USER}
          docker info
        name: 'Install Docker'

      - name: 'Start KIND'
        run: ./azurepipeline/start.sh
        continue-on-error: true

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Build project
        run: go build -v ./cmd/aks-periscope/aks-periscope.go

      - run: |
          bash -f ./azurepipeline/stop.sh
        name: 'Stop KIND'
        continue-on-error: true