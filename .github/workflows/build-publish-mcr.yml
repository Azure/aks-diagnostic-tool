name: Building and Pushing to MCR
on: [workflow_dispatch]

permissions:
      id-token: write
      contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          path: ./CHANGELOG.md
      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name : ${{ steps.changelog_reader.outputs.version}}
          release_name: ${{ steps.changelog_reader.outputs.version}}
          body: Publish ${{ steps.changelog_reader.outputs.changes }}
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, windows-2019, windows-2022]
        include:
        - os: ubuntu-latest
          baseimage: 'mcr.microsoft.com/cbl-mariner/distroless/base:2.0'
          tagext: 'mariner2.0'
        - os: windows-2019
          baseimage: 'mcr.microsoft.com/windows/nanoserver:ltsc2019'
          tagext: 'nanoserver2019'
        - os: windows-2022
          baseimage: 'mcr.microsoft.com/windows/nanoserver:ltsc2022'
          tagext: 'nanoserver2022'
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@v2
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          path: ./CHANGELOG.md
      - name: Display output
        run: |
           echo "Version: ${{ steps.changelog_reader.outputs.version }}"
           echo "Changes: ${{ steps.changelog_reader.outputs.changes }}"
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: 'Run Azure CLI commands'
        run: |
          $tag = "${{ secrets.AZURE_REGISTRY_SERVER }}/public/aks/periscope:${{ steps.changelog_reader.outputs.version }}-${{ matrix.tagext }}"
          docker build -f ./builder/Dockerfile --build-arg BASE_IMAGE=${{ matrix.baseimage }} -t $tag .
          az acr login -n ${{ secrets.AZURE_REGISTRY_SERVER }}
          docker push $tag
          echo "acr push done"
